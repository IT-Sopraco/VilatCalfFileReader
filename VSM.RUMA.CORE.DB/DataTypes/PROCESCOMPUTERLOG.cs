
/*
'===============================================================================
'  Generated From - CSharp_VSM_BusinessEntity.vbgen
' 
'  ** IMPORTANT  ** 
'  How to Generate your stored procedures:
' 
'  SQL        = SQL_StoredProcs.vbgen
'  ACCESS     = Access_StoredProcs.vbgen
'  ORACLE     = Oracle_StoredProcs.vbgen
'  FIREBIRD   = FirebirdStoredProcs.vbgen
'  POSTGRESQL = PostgreSQL_StoredProcs.vbgen
'
'  The supporting base class  is in the Architecture directory in "VSM".
'  
'  This object is 'abstract' which means you need to inherit from it to be able
'  to instantiate it.  This is very easilly done. You can override properties and
'  methods in your derived class, this allows you to regenerate this class at any
'  time and not worry about overwriting custom code. 
'
'  NEVER EDIT THIS FILE.
'
'  public class YourObject :  _YourObject
'  {
'
'  }
'
'===============================================================================
*/

// Generated by MyGeneration Version # (1.3.0.3)
using System;
using System.Data;

using System.Collections;
using System.Collections.Specialized;


namespace VSM.RUMA.CORE.DB.DataTypes
{
    [Serializable()]
	public class PROCESCOMPUTERLOG : DataObject
	{
		public PROCESCOMPUTERLOG() : base(Database.agrologs)
		{
			UpdateParams = new String[] 
			{
            	"PclId"
			};
		
		}

	
		#region ColumnNames
		public class ColumnNamesPROCESCOMPUTERLOG
		{  
            public const string PclId = "pclId";
            public const string PclUbnId = "pclUbnId";
            public const string PclDtBegin = "pclDtBegin";
            public const string PclDtEnd = "pclDtEnd";
            public const string PclResult = "pclResult";
            public const string PclIp = "pclIp";
            public const string PclType = "pclType";
            public const string PclVersion = "pclVersion";
            public const string PclXMLFields = "pclXMLFields";
 

		}
		#endregion




		#region Properties
	
		[System.ComponentModel.DataObjectField(true, true, false)] 
		public uint PclId
	    {
			get
	        {
				return base.Getuint(ColumnNamesPROCESCOMPUTERLOG.PclId);
			}
			set
	        {
				base.Setuint(ColumnNamesPROCESCOMPUTERLOG.PclId, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int PclUbnId
	    {
			get
	        {
				return base.Getint(ColumnNamesPROCESCOMPUTERLOG.PclUbnId);
			}
			set
	        {
				base.Setint(ColumnNamesPROCESCOMPUTERLOG.PclUbnId, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public DateTime PclDtBegin
	    {
			get
	        {
				return base.GetDateTime(ColumnNamesPROCESCOMPUTERLOG.PclDtBegin);
			}
			set
	        {
				base.SetDateTime(ColumnNamesPROCESCOMPUTERLOG.PclDtBegin, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public DateTime PclDtEnd
	    {
			get
	        {
				return base.GetDateTime(ColumnNamesPROCESCOMPUTERLOG.PclDtEnd);
			}
			set
	        {
				base.SetDateTime(ColumnNamesPROCESCOMPUTERLOG.PclDtEnd, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public sbyte PclResult
	    {
			get
	        {
				return base.Getsbyte(ColumnNamesPROCESCOMPUTERLOG.PclResult);
			}
			set
	        {
				base.Setsbyte(ColumnNamesPROCESCOMPUTERLOG.PclResult, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public string PclIp
	    {
			get
	        {
				return base.Getstring(ColumnNamesPROCESCOMPUTERLOG.PclIp);
			}
			set
	        {
				base.Setstring(ColumnNamesPROCESCOMPUTERLOG.PclIp, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public sbyte PclType
	    {
			get
	        {
				return base.Getsbyte(ColumnNamesPROCESCOMPUTERLOG.PclType);
			}
			set
	        {
				base.Setsbyte(ColumnNamesPROCESCOMPUTERLOG.PclType, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public string PclVersion
	    {
			get
	        {
				return base.Getstring(ColumnNamesPROCESCOMPUTERLOG.PclVersion);
			}
			set
	        {
				base.Setstring(ColumnNamesPROCESCOMPUTERLOG.PclVersion, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public ulong PclXMLFields
	    {
			get
	        {
				return base.Getulong(ColumnNamesPROCESCOMPUTERLOG.PclXMLFields);
			}
			set
	        {
				base.Setulong(ColumnNamesPROCESCOMPUTERLOG.PclXMLFields, value);
			}
		}


		#endregion
		
	}
}
