
/*
'===============================================================================
'  Generated From - CSharp_VSM_BusinessEntity.vbgen
' 
'  ** IMPORTANT  ** 
'  How to Generate your stored procedures:
' 
'  SQL        = SQL_StoredProcs.vbgen
'  ACCESS     = Access_StoredProcs.vbgen
'  ORACLE     = Oracle_StoredProcs.vbgen
'  FIREBIRD   = FirebirdStoredProcs.vbgen
'  POSTGRESQL = PostgreSQL_StoredProcs.vbgen
'
'  The supporting base class  is in the Architecture directory in "VSM".
'  
'  This object is 'abstract' which means you need to inherit from it to be able
'  to instantiate it.  This is very easilly done. You can override properties and
'  methods in your derived class, this allows you to regenerate this class at any
'  time and not worry about overwriting custom code. 
'
'  NEVER EDIT THIS FILE.
'
'  public class YourObject :  _YourObject
'  {
'
'  }
'
'===============================================================================
*/

// Generated by MyGeneration Version # (1.3.0.3)
using System;
using System.Data;

using System.Collections;
using System.Collections.Specialized;


namespace VSM.RUMA.CORE.DB.DataTypes
{
    [Serializable()]
	public class MILKPOST : DataObject
	{
		public MILKPOST() : base(Database.agrofactuur)
		{
			UpdateParams = new String[] 
			{
            	"UbnID",
            	"CooperationNumber",
            	"SupplierNumber",
            	"InvoiceNumberYear",
            	"BookNumber"
			};
		
		}

	
		#region ColumnNames
		public class ColumnNamesMILKPOST
		{  
            public const string UbnID = "UbnID";
            public const string CooperationNumber = "CooperationNumber";
            public const string SupplierNumber = "SupplierNumber";
            public const string InvoiceNumberYear = "InvoiceNumberYear";
            public const string BookNumber = "BookNumber";
            public const string DateStartInvoice = "DateStartInvoice";
            public const string DateEndInvoice = "DateEndInvoice";
            public const string Quantity = "Quantity";
            public const string PriceExclVAT = "PriceExclVAT";
            public const string PriceVAT = "PriceVAT";
            public const string AmountExclVAT = "AmountExclVAT";
            public const string Total = "Total";
            public const string VATPercentage = "VATPercentage";
            public const string ValutaCode = "ValutaCode";
 

		}
		#endregion




		#region Properties
	
		[System.ComponentModel.DataObjectField(true, false, false)] 
		public int UbnID
	    {
			get
	        {
				return base.Getint(ColumnNamesMILKPOST.UbnID);
			}
			set
	        {
				base.Setint(ColumnNamesMILKPOST.UbnID, value);
			}
		}

		[System.ComponentModel.DataObjectField(true, false, false)] 
		public int CooperationNumber
	    {
			get
	        {
				return base.Getint(ColumnNamesMILKPOST.CooperationNumber);
			}
			set
	        {
				base.Setint(ColumnNamesMILKPOST.CooperationNumber, value);
			}
		}

		[System.ComponentModel.DataObjectField(true, false, false)] 
		public int SupplierNumber
	    {
			get
	        {
				return base.Getint(ColumnNamesMILKPOST.SupplierNumber);
			}
			set
	        {
				base.Setint(ColumnNamesMILKPOST.SupplierNumber, value);
			}
		}

		[System.ComponentModel.DataObjectField(true, false, false)] 
		public int InvoiceNumberYear
	    {
			get
	        {
				return base.Getint(ColumnNamesMILKPOST.InvoiceNumberYear);
			}
			set
	        {
				base.Setint(ColumnNamesMILKPOST.InvoiceNumberYear, value);
			}
		}

		[System.ComponentModel.DataObjectField(true, false, false)] 
		public string BookNumber
	    {
			get
	        {
				return base.Getstring(ColumnNamesMILKPOST.BookNumber);
			}
			set
	        {
				base.Setstring(ColumnNamesMILKPOST.BookNumber, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public DateTime DateStartInvoice
	    {
			get
	        {
				return base.GetDateTime(ColumnNamesMILKPOST.DateStartInvoice);
			}
			set
	        {
				base.SetDateTime(ColumnNamesMILKPOST.DateStartInvoice, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public DateTime DateEndInvoice
	    {
			get
	        {
				return base.GetDateTime(ColumnNamesMILKPOST.DateEndInvoice);
			}
			set
	        {
				base.SetDateTime(ColumnNamesMILKPOST.DateEndInvoice, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public double Quantity
	    {
			get
	        {
				return base.Getdouble(ColumnNamesMILKPOST.Quantity);
			}
			set
	        {
				base.Setdouble(ColumnNamesMILKPOST.Quantity, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public double PriceExclVAT
	    {
			get
	        {
				return base.Getdouble(ColumnNamesMILKPOST.PriceExclVAT);
			}
			set
	        {
				base.Setdouble(ColumnNamesMILKPOST.PriceExclVAT, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public double PriceVAT
	    {
			get
	        {
				return base.Getdouble(ColumnNamesMILKPOST.PriceVAT);
			}
			set
	        {
				base.Setdouble(ColumnNamesMILKPOST.PriceVAT, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public double AmountExclVAT
	    {
			get
	        {
				return base.Getdouble(ColumnNamesMILKPOST.AmountExclVAT);
			}
			set
	        {
				base.Setdouble(ColumnNamesMILKPOST.AmountExclVAT, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public double Total
	    {
			get
	        {
				return base.Getdouble(ColumnNamesMILKPOST.Total);
			}
			set
	        {
				base.Setdouble(ColumnNamesMILKPOST.Total, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public double VATPercentage
	    {
			get
	        {
				return base.Getdouble(ColumnNamesMILKPOST.VATPercentage);
			}
			set
	        {
				base.Setdouble(ColumnNamesMILKPOST.VATPercentage, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int ValutaCode
	    {
			get
	        {
				return base.Getint(ColumnNamesMILKPOST.ValutaCode);
			}
			set
	        {
				base.Setint(ColumnNamesMILKPOST.ValutaCode, value);
			}
		}


		#endregion
		
	}
}
