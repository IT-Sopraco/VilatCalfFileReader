
/*
'===============================================================================
'  Generated From - CSharp_VSM_BusinessEntity.vbgen
' 
'  ** IMPORTANT  ** 
'  How to Generate your stored procedures:
' 
'  SQL        = SQL_StoredProcs.vbgen
'  ACCESS     = Access_StoredProcs.vbgen
'  ORACLE     = Oracle_StoredProcs.vbgen
'  FIREBIRD   = FirebirdStoredProcs.vbgen
'  POSTGRESQL = PostgreSQL_StoredProcs.vbgen
'
'  The supporting base class  is in the Architecture directory in "VSM".
'  
'  This object is 'abstract' which means you need to inherit from it to be able
'  to instantiate it.  This is very easilly done. You can override properties and
'  methods in your derived class, this allows you to regenerate this class at any
'  time and not worry about overwriting custom code. 
'
'  NEVER EDIT THIS FILE.
'
'  public class YourObject :  _YourObject
'  {
'
'  }
'
'===============================================================================
*/

// Generated by MyGeneration Version # (1.3.0.3)
using System;
using System.Data;

using System.Collections;
using System.Collections.Specialized;


namespace VSM.RUMA.CORE.DB.DataTypes
{
    [Serializable()]
	public class SOAPLOG : DataObject
	{
		public SOAPLOG() : base(Database.animal)
		{
			UpdateParams = new String[] 
			{
            	"Internalnr"
			};
		
		}

	
		#region ColumnNames
		public class ColumnNamesSOAPLOG
		{  
            public const string Internalnr = "Internalnr";
            public const string Kind = "Kind";
            public const string SubKind = "SubKind";
            public const string Date = "Date";
            public const string Time = "Time";
            public const string Lifenumber = "Lifenumber";
            public const string FarmNumber = "FarmNumber";
            public const string Status = "Status";
            public const string Code = "Code";
            public const string Omschrijving = "Omschrijving";
            public const string TaskLogID = "TaskLogID";
            public const string ThrId = "ThrId";
        }
		#endregion




		#region Properties
	
		[System.ComponentModel.DataObjectField(true, true, false)] 
		public int Internalnr
	    {
			get
	        {
				return base.Getint(ColumnNamesSOAPLOG.Internalnr);
			}
			set
	        {
				base.Setint(ColumnNamesSOAPLOG.Internalnr, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int Kind
	    {
			get
	        {
				return base.Getint(ColumnNamesSOAPLOG.Kind);
			}
			set
	        {
				base.Setint(ColumnNamesSOAPLOG.Kind, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int SubKind
	    {
			get
	        {
				return base.Getint(ColumnNamesSOAPLOG.SubKind);
			}
			set
	        {
				base.Setint(ColumnNamesSOAPLOG.SubKind, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public DateTime Date
	    {
			get
	        {
				return base.GetDateTime(ColumnNamesSOAPLOG.Date);
			}
			set
	        {
				base.SetDateTime(ColumnNamesSOAPLOG.Date, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public DateTime Time
	    {
			get
	        {
				return base.GetDateTime(ColumnNamesSOAPLOG.Time);
			}
			set
	        {
				base.SetDateTime(ColumnNamesSOAPLOG.Time, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public string Lifenumber
	    {
			get
	        {
				return base.Getstring(ColumnNamesSOAPLOG.Lifenumber);
			}
			set
	        {
				base.Setstring(ColumnNamesSOAPLOG.Lifenumber, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public string FarmNumber
	    {
			get
	        {
				return base.Getstring(ColumnNamesSOAPLOG.FarmNumber);
			}
			set
	        {
				base.Setstring(ColumnNamesSOAPLOG.FarmNumber, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public string Status
	    {
			get
	        {
				return base.Getstring(ColumnNamesSOAPLOG.Status);
			}
			set
	        {
				base.Setstring(ColumnNamesSOAPLOG.Status, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public string Code
	    {
			get
	        {
				return base.Getstring(ColumnNamesSOAPLOG.Code);
			}
			set
	        {
				base.Setstring(ColumnNamesSOAPLOG.Code, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public string Omschrijving
	    {
			get
	        {
				return base.Getstring(ColumnNamesSOAPLOG.Omschrijving);
			}
			set
	        {
				base.Setstring(ColumnNamesSOAPLOG.Omschrijving, value);
			}
		}

        [System.ComponentModel.DataObjectField(false, false, false)]
        public int TaskLogID
        {
            get
            {
                return base.Getint(ColumnNamesSOAPLOG.TaskLogID);
            }
            set
            {
                base.Setint(ColumnNamesSOAPLOG.TaskLogID, value);
            }
        }
        [System.ComponentModel.DataObjectField(false, false, false)]
        public int ThrId
        {
            get
            {
                return base.Getint(ColumnNamesSOAPLOG.ThrId);
            }
            set
            {
                base.Setint(ColumnNamesSOAPLOG.ThrId, value);
            }
        } 
        public override string ToString()
        {
            return $"SOAPLOG(Internalnr: {Internalnr} - Kind: {Kind} - SubKind: {SubKind} - DateTime: {(Date.Date + Time.TimeOfDay).ToString("dd-MM-yyyy HH:mm:ss")} - LifeNumber: {Lifenumber} - UBN(FarmNumber): {FarmNumber} - Status: {Status} - Code: {Code} - Omschrijving: {Omschrijving})";
        }

        #endregion

    }
}
