
/*
'===============================================================================
'  Generated From - CSharp_VSM_BusinessEntity.vbgen
' 
'  ** IMPORTANT  ** 
'  How to Generate your stored procedures:
' 
'  SQL        = SQL_StoredProcs.vbgen
'  ACCESS     = Access_StoredProcs.vbgen
'  ORACLE     = Oracle_StoredProcs.vbgen
'  FIREBIRD   = FirebirdStoredProcs.vbgen
'  POSTGRESQL = PostgreSQL_StoredProcs.vbgen
'
'  The supporting base class  is in the Architecture directory in "VSM".
'  
'  This object is 'abstract' which means you need to inherit from it to be able
'  to instantiate it.  This is very easilly done. You can override properties and
'  methods in your derived class, this allows you to regenerate this class at any
'  time and not worry about overwriting custom code. 
'
'  NEVER EDIT THIS FILE.
'
'  public class YourObject :  _YourObject
'  {
'
'  }
'
'===============================================================================
*/

// Generated by MyGeneration Version # (1.3.0.3)
using System;
using System.Data;

using System.Collections;
using System.Collections.Specialized;


namespace VSM.RUMA.CORE.DB.DataTypes
{
    [Serializable()]
	public class FTPACTIO : DataObject
	{
		public FTPACTIO() : base(Database.agrofactuur)
		{
			UpdateParams = new String[] 
			{

			};
		
		}

	
		#region ColumnNames
		public class ColumnNamesFTPACTIO
		{  
            public const string ActionNumber = "ActionNumber";
            public const string ActionName = "ActionName";
            public const string FtpNumber = "FtpNumber";
            public const string DirectoryFrom = "DirectoryFrom";
            public const string DirectoryTo = "DirectoryTo";
            public const string Direction = "Direction";
            public const string AfterTransfer = "AfterTransfer";
            public const string ReplaceDirectory = "ReplaceDirectory";
            public const string UseOriginalName = "UseOriginalName";
            public const string UseExtention = "UseExtention";
            public const string WaitTime = "WaitTime";
            public const string Overwrite = "Overwrite";
            public const string UseOtherExtensions = "UseOtherExtensions";
            public const string ActionType = "ActionType";
 

		}
		#endregion




		#region Properties
	
		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int ActionNumber
	    {
			get
	        {
				return base.Getint(ColumnNamesFTPACTIO.ActionNumber);
			}
			set
	        {
				base.Setint(ColumnNamesFTPACTIO.ActionNumber, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public string ActionName
	    {
			get
	        {
				return base.Getstring(ColumnNamesFTPACTIO.ActionName);
			}
			set
	        {
				base.Setstring(ColumnNamesFTPACTIO.ActionName, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int FtpNumber
	    {
			get
	        {
				return base.Getint(ColumnNamesFTPACTIO.FtpNumber);
			}
			set
	        {
				base.Setint(ColumnNamesFTPACTIO.FtpNumber, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public string DirectoryFrom
	    {
			get
	        {
				return base.Getstring(ColumnNamesFTPACTIO.DirectoryFrom);
			}
			set
	        {
				base.Setstring(ColumnNamesFTPACTIO.DirectoryFrom, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public string DirectoryTo
	    {
			get
	        {
				return base.Getstring(ColumnNamesFTPACTIO.DirectoryTo);
			}
			set
	        {
				base.Setstring(ColumnNamesFTPACTIO.DirectoryTo, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public sbyte Direction
	    {
			get
	        {
				return base.Getsbyte(ColumnNamesFTPACTIO.Direction);
			}
			set
	        {
				base.Setsbyte(ColumnNamesFTPACTIO.Direction, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int AfterTransfer
	    {
			get
	        {
				return base.Getint(ColumnNamesFTPACTIO.AfterTransfer);
			}
			set
	        {
				base.Setint(ColumnNamesFTPACTIO.AfterTransfer, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public string ReplaceDirectory
	    {
			get
	        {
				return base.Getstring(ColumnNamesFTPACTIO.ReplaceDirectory);
			}
			set
	        {
				base.Setstring(ColumnNamesFTPACTIO.ReplaceDirectory, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public sbyte UseOriginalName
	    {
			get
	        {
				return base.Getsbyte(ColumnNamesFTPACTIO.UseOriginalName);
			}
			set
	        {
				base.Setsbyte(ColumnNamesFTPACTIO.UseOriginalName, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public string UseExtention
	    {
			get
	        {
				return base.Getstring(ColumnNamesFTPACTIO.UseExtention);
			}
			set
	        {
				base.Setstring(ColumnNamesFTPACTIO.UseExtention, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int WaitTime
	    {
			get
	        {
				return base.Getint(ColumnNamesFTPACTIO.WaitTime);
			}
			set
	        {
				base.Setint(ColumnNamesFTPACTIO.WaitTime, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int Overwrite
	    {
			get
	        {
				return base.Getint(ColumnNamesFTPACTIO.Overwrite);
			}
			set
	        {
				base.Setint(ColumnNamesFTPACTIO.Overwrite, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public string UseOtherExtensions
	    {
			get
	        {
				return base.Getstring(ColumnNamesFTPACTIO.UseOtherExtensions);
			}
			set
	        {
				base.Setstring(ColumnNamesFTPACTIO.UseOtherExtensions, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int ActionType
	    {
			get
	        {
				return base.Getint(ColumnNamesFTPACTIO.ActionType);
			}
			set
	        {
				base.Setint(ColumnNamesFTPACTIO.ActionType, value);
			}
		}


		#endregion
		
	}
}
