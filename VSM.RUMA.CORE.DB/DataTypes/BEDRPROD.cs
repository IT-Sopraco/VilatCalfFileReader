
/*
'===============================================================================
'  Generated From - CSharp_VSM_BusinessEntity.vbgen
' 
'  ** IMPORTANT  ** 
'  How to Generate your stored procedures:
' 
'  SQL        = SQL_StoredProcs.vbgen
'  ACCESS     = Access_StoredProcs.vbgen
'  ORACLE     = Oracle_StoredProcs.vbgen
'  FIREBIRD   = FirebirdStoredProcs.vbgen
'  POSTGRESQL = PostgreSQL_StoredProcs.vbgen
'
'  The supporting base class  is in the Architecture directory in "VSM".
'  
'  This object is 'abstract' which means you need to inherit from it to be able
'  to instantiate it.  This is very easilly done. You can override properties and
'  methods in your derived class, this allows you to regenerate this class at any
'  time and not worry about overwriting custom code. 
'
'  NEVER EDIT THIS FILE.
'
'  public class YourObject :  _YourObject
'  {
'
'  }
'
'===============================================================================
*/

// Generated by MyGeneration Version # (1.3.0.3)
using System;
using System.Data;

using System.Collections;
using System.Collections.Specialized;


namespace VSM.RUMA.CORE.DB.DataTypes
{
    [Serializable()]
	public class BEDRPROD : DataObject
	{
		public BEDRPROD() : base(Database.animal)
		{
			UpdateParams = new String[] 
			{
            	"UbnId",
            	"ProductionDate"
			};
		
		}

	
		#region ColumnNames
		public class ColumnNamesBEDRPROD
		{  
            public const string UbnId = "UbnId";
            public const string ProductionDate = "ProductionDate";
            public const string NumberCowSamples = "NumberCowSamples";
            public const string NumberCowDryOff = "NumberCowDryOff";
            public const string NumberCowMilking = "NumberCowMilking";
            public const string TotKgProtein = "TotKgProtein";
            public const string Average305Protein = "Average305Protein";
            public const string Average305ProteinSt = "Average305ProteinSt";
            public const string TotMilk = "TotMilk";
            public const string Average305Milk = "Average305Milk";
            public const string Average305MilkSt = "Average305MilkSt";
            public const string TotKgFat = "TotKgFat";
            public const string Average305Fat = "Average305Fat";
            public const string Average305FatSt = "Average305FatSt";
            public const string NettIncomeFarm = "NettIncomeFarm";
            public const string BSKValue = "BSKValue";
            public const string CodeMilkCount = "CodeMilkCount";
            public const string CodeDerivationProd = "CodeDerivationProd";
            public const string DateFatProteinResearch = "DateFatProteinResearch";
            public const string CodeStatusProdFarm = "CodeStatusProdFarm";
            public const string IndAlternate = "IndAlternate";
            public const string TypeOfControl = "TypeOfControl";
            public const string CurrencyEuro = "CurrencyEuro";
            public const string Mpr24hLast = "Mpr24hLast";
            public const string Mpr24hYearavg = "Mpr24hYearavg";
            public const string MilkStartTime1 = "MilkStartTime1";
            public const string MilkEndTime1 = "MilkEndTime1";
            public const string MilkStartTime2 = "MilkStartTime2";
            public const string MilkEndTime2 = "MilkEndTime2";
            public const string MilkStartTime3 = "MilkStartTime3";
            public const string MilkEndTime3 = "MilkEndTime3";
		}
		#endregion




		#region Properties
	
		[System.ComponentModel.DataObjectField(true, false, false)] 
		public int UbnId
	    {
			get
	        {
				return base.Getint(ColumnNamesBEDRPROD.UbnId);
			}
			set
	        {
				base.Setint(ColumnNamesBEDRPROD.UbnId, value);
			}
		}

		[System.ComponentModel.DataObjectField(true, false, false)] 
		public DateTime ProductionDate
	    {
			get
	        {
				return base.GetDateTime(ColumnNamesBEDRPROD.ProductionDate);
			}
			set
	        {
				base.SetDateTime(ColumnNamesBEDRPROD.ProductionDate, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int NumberCowSamples
	    {
			get
	        {
				return base.Getint(ColumnNamesBEDRPROD.NumberCowSamples);
			}
			set
	        {
				base.Setint(ColumnNamesBEDRPROD.NumberCowSamples, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int NumberCowDryOff
	    {
			get
	        {
				return base.Getint(ColumnNamesBEDRPROD.NumberCowDryOff);
			}
			set
	        {
				base.Setint(ColumnNamesBEDRPROD.NumberCowDryOff, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int NumberCowMilking
	    {
			get
	        {
				return base.Getint(ColumnNamesBEDRPROD.NumberCowMilking);
			}
			set
	        {
				base.Setint(ColumnNamesBEDRPROD.NumberCowMilking, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public double TotKgProtein
	    {
			get
	        {
				return base.Getdouble(ColumnNamesBEDRPROD.TotKgProtein);
			}
			set
	        {
				base.Setdouble(ColumnNamesBEDRPROD.TotKgProtein, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public double Average305Protein
	    {
			get
	        {
				return base.Getdouble(ColumnNamesBEDRPROD.Average305Protein);
			}
			set
	        {
				base.Setdouble(ColumnNamesBEDRPROD.Average305Protein, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public double Average305ProteinSt
	    {
			get
	        {
				return base.Getdouble(ColumnNamesBEDRPROD.Average305ProteinSt);
			}
			set
	        {
				base.Setdouble(ColumnNamesBEDRPROD.Average305ProteinSt, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public double TotMilk
	    {
			get
	        {
				return base.Getdouble(ColumnNamesBEDRPROD.TotMilk);
			}
			set
	        {
				base.Setdouble(ColumnNamesBEDRPROD.TotMilk, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public double Average305Milk
	    {
			get
	        {
				return base.Getdouble(ColumnNamesBEDRPROD.Average305Milk);
			}
			set
	        {
				base.Setdouble(ColumnNamesBEDRPROD.Average305Milk, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public double Average305MilkSt
	    {
			get
	        {
				return base.Getdouble(ColumnNamesBEDRPROD.Average305MilkSt);
			}
			set
	        {
				base.Setdouble(ColumnNamesBEDRPROD.Average305MilkSt, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public double TotKgFat
	    {
			get
	        {
				return base.Getdouble(ColumnNamesBEDRPROD.TotKgFat);
			}
			set
	        {
				base.Setdouble(ColumnNamesBEDRPROD.TotKgFat, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public double Average305Fat
	    {
			get
	        {
				return base.Getdouble(ColumnNamesBEDRPROD.Average305Fat);
			}
			set
	        {
				base.Setdouble(ColumnNamesBEDRPROD.Average305Fat, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public double Average305FatSt
	    {
			get
	        {
				return base.Getdouble(ColumnNamesBEDRPROD.Average305FatSt);
			}
			set
	        {
				base.Setdouble(ColumnNamesBEDRPROD.Average305FatSt, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public double NettIncomeFarm
	    {
			get
	        {
				return base.Getdouble(ColumnNamesBEDRPROD.NettIncomeFarm);
			}
			set
	        {
				base.Setdouble(ColumnNamesBEDRPROD.NettIncomeFarm, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public double BSKValue
	    {
			get
	        {
				return base.Getdouble(ColumnNamesBEDRPROD.BSKValue);
			}
			set
	        {
				base.Setdouble(ColumnNamesBEDRPROD.BSKValue, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int CodeMilkCount
	    {
			get
	        {
				return base.Getint(ColumnNamesBEDRPROD.CodeMilkCount);
			}
			set
	        {
				base.Setint(ColumnNamesBEDRPROD.CodeMilkCount, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int CodeDerivationProd
	    {
			get
	        {
				return base.Getint(ColumnNamesBEDRPROD.CodeDerivationProd);
			}
			set
	        {
				base.Setint(ColumnNamesBEDRPROD.CodeDerivationProd, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public DateTime DateFatProteinResearch
	    {
			get
	        {
				return base.GetDateTime(ColumnNamesBEDRPROD.DateFatProteinResearch);
			}
			set
	        {
				base.SetDateTime(ColumnNamesBEDRPROD.DateFatProteinResearch, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int CodeStatusProdFarm
	    {
			get
	        {
				return base.Getint(ColumnNamesBEDRPROD.CodeStatusProdFarm);
			}
			set
	        {
				base.Setint(ColumnNamesBEDRPROD.CodeStatusProdFarm, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int IndAlternate
	    {
			get
	        {
				return base.Getint(ColumnNamesBEDRPROD.IndAlternate);
			}
			set
	        {
				base.Setint(ColumnNamesBEDRPROD.IndAlternate, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int TypeOfControl
	    {
			get
	        {
				return base.Getint(ColumnNamesBEDRPROD.TypeOfControl);
			}
			set
	        {
				base.Setint(ColumnNamesBEDRPROD.TypeOfControl, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public sbyte CurrencyEuro
	    {
			get
	        {
				return base.Getsbyte(ColumnNamesBEDRPROD.CurrencyEuro);
			}
			set
	        {
				base.Setsbyte(ColumnNamesBEDRPROD.CurrencyEuro, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public double Mpr24hLast
	    {
			get
	        {
				return base.Getdouble(ColumnNamesBEDRPROD.Mpr24hLast);
			}
			set
	        {
				base.Setdouble(ColumnNamesBEDRPROD.Mpr24hLast, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public double Mpr24hYearavg
	    {
			get
	        {
				return base.Getdouble(ColumnNamesBEDRPROD.Mpr24hYearavg);
			}
			set
	        {
				base.Setdouble(ColumnNamesBEDRPROD.Mpr24hYearavg, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public DateTime MilkStartTime1
	    {
			get
	        {
				return base.GetDateTime(ColumnNamesBEDRPROD.MilkStartTime1);
			}
			set
	        {
				base.SetDateTime(ColumnNamesBEDRPROD.MilkStartTime1, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public DateTime MilkEndTime1
	    {
			get
	        {
				return base.GetDateTime(ColumnNamesBEDRPROD.MilkEndTime1);
			}
			set
	        {
				base.SetDateTime(ColumnNamesBEDRPROD.MilkEndTime1, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public DateTime MilkStartTime2
	    {
			get
	        {
				return base.GetDateTime(ColumnNamesBEDRPROD.MilkStartTime2);
			}
			set
	        {
				base.SetDateTime(ColumnNamesBEDRPROD.MilkStartTime2, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public DateTime MilkEndTime2
	    {
			get
	        {
				return base.GetDateTime(ColumnNamesBEDRPROD.MilkEndTime2);
			}
			set
	        {
				base.SetDateTime(ColumnNamesBEDRPROD.MilkEndTime2, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public DateTime MilkStartTime3
	    {
			get
	        {
				return base.GetDateTime(ColumnNamesBEDRPROD.MilkStartTime3);
			}
			set
	        {
				base.SetDateTime(ColumnNamesBEDRPROD.MilkStartTime3, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public DateTime MilkEndTime3
	    {
			get
	        {
				return base.GetDateTime(ColumnNamesBEDRPROD.MilkEndTime3);
			}
			set
	        {
				base.SetDateTime(ColumnNamesBEDRPROD.MilkEndTime3, value);
			}
		}

		#endregion
		
	}
}
