
/*
'===============================================================================
'  Generated From - CSharp_VSM_BusinessEntity.vbgen
' 
'  ** IMPORTANT  ** 
'  How to Generate your stored procedures:
' 
'  SQL        = SQL_StoredProcs.vbgen
'  ACCESS     = Access_StoredProcs.vbgen
'  ORACLE     = Oracle_StoredProcs.vbgen
'  FIREBIRD   = FirebirdStoredProcs.vbgen
'  POSTGRESQL = PostgreSQL_StoredProcs.vbgen
'
'  The supporting base class  is in the Architecture directory in "VSM".
'  
'  This object is 'abstract' which means you need to inherit from it to be able
'  to instantiate it.  This is very easilly done. You can override properties and
'  methods in your derived class, this allows you to regenerate this class at any
'  time and not worry about overwriting custom code. 
'
'  NEVER EDIT THIS FILE.
'
'  public class YourObject :  _YourObject
'  {
'
'  }
'
'===============================================================================
*/

// Generated by MyGeneration Version # (1.3.0.3)
using System;
using System.Data;

using System.Collections;
using System.Collections.Specialized;

namespace VSM.RUMA.CORE.DB.DataTypes
{
    [Serializable()]
	public class VERIFIED_ANIMAL_SANITEL : DataObject
	{
		public VERIFIED_ANIMAL_SANITEL()
		{
		}

	
		#region ColumnNames
		public class ColumnNames
		{  
            public const string AnimalLifenumber = "AnimalLifenumber";
            public const string AnimalBirthDate = "AnimalBirthDate";
            public const string AnimalMotherLifenumber = "AnimalMotherLifenumber";
            public const string AnimalHaircolor = "AnimalHaircolor";
            public const string AnimalGenderCode = "AnimalGenderCode";
            public const string AnimalVRVName = "AnimalVRVName";
            public const string AnimalType = "AnimalType";
            public const string AnimalPurchaseDate = "AnimalPurchaseDate";
            public const string AnimalDepartureDate = "AnimalDepartureDate";
            public const string AnimalDeathDate = "AnimalDeathDate";
            public const string AnimalFacility = "AnimalFacility";
            public const string AnimalSanitaryUnit = "AnimalSanitaryUnit";
            public const string AnimalProductionUnit = "AnimalProductionUnit";
            public const string AnimalBirthFacility = "AnimalBirthFacility";
            public const string AnimalPassportVersionNr = "AnimalPassportVersionNr";
            public const string RequestDate = "RequestDate";
            public const string Changed_By = "Changed_By";
            public const string SourceID = "SourceID";
 

		}
		#endregion

		#region Properties
	
		public string AnimalLifenumber
	    {
			get
	        {
				return base.Getstring(ColumnNames.AnimalLifenumber);
			}
			set
	        {
				base.Setstring(ColumnNames.AnimalLifenumber, value);
			}
		}

		public DateTime AnimalBirthDate
	    {
			get
	        {
				return base.GetDateTime(ColumnNames.AnimalBirthDate);
			}
			set
	        {
				base.SetDateTime(ColumnNames.AnimalBirthDate, value);
			}
		}

		public string AnimalMotherLifenumber
	    {
			get
	        {
				return base.Getstring(ColumnNames.AnimalMotherLifenumber);
			}
			set
	        {
				base.Setstring(ColumnNames.AnimalMotherLifenumber, value);
			}
		}

		public string AnimalHaircolor
	    {
			get
	        {
				return base.Getstring(ColumnNames.AnimalHaircolor);
			}
			set
	        {
				base.Setstring(ColumnNames.AnimalHaircolor, value);
			}
		}

        public string AnimalGenderCode
        {
            get
            {
                return base.Getstring(ColumnNames.AnimalGenderCode);
            }
            set
            {
                base.Setstring(ColumnNames.AnimalGenderCode, value);
            }
        }

        public string AnimalVRVName
	    {
			get
	        {
				return base.Getstring(ColumnNames.AnimalVRVName);
			}
			set
	        {
				base.Setstring(ColumnNames.AnimalVRVName, value);
			}
		}

		public string AnimalType
	    {
			get
	        {
				return base.Getstring(ColumnNames.AnimalType);
			}
			set
	        {
				base.Setstring(ColumnNames.AnimalType, value);
			}
		}

		public DateTime AnimalPurchaseDate
	    {
			get
	        {
				return base.GetDateTime(ColumnNames.AnimalPurchaseDate);
			}
			set
	        {
				base.SetDateTime(ColumnNames.AnimalPurchaseDate, value);
			}
		}

		public DateTime AnimalDepartureDate
	    {
			get
	        {
				return base.GetDateTime(ColumnNames.AnimalDepartureDate);
			}
			set
	        {
				base.SetDateTime(ColumnNames.AnimalDepartureDate, value);
			}
		}

		public DateTime AnimalDeathDate
	    {
			get
	        {
				return base.GetDateTime(ColumnNames.AnimalDeathDate);
			}
			set
	        {
				base.SetDateTime(ColumnNames.AnimalDeathDate, value);
			}
		}

		public string AnimalFacility
	    {
			get
	        {
				return base.Getstring(ColumnNames.AnimalFacility);
			}
			set
	        {
				base.Setstring(ColumnNames.AnimalFacility, value);
			}
		}

		public string AnimalSanitaryUnit
	    {
			get
	        {
				return base.Getstring(ColumnNames.AnimalSanitaryUnit);
			}
			set
	        {
				base.Setstring(ColumnNames.AnimalSanitaryUnit, value);
			}
		}

		public string AnimalProductionUnit
	    {
			get
	        {
				return base.Getstring(ColumnNames.AnimalProductionUnit);
			}
			set
	        {
				base.Setstring(ColumnNames.AnimalProductionUnit, value);
			}
		}

		public string AnimalBirthFacility
	    {
			get
	        {
				return base.Getstring(ColumnNames.AnimalBirthFacility);
			}
			set
	        {
				base.Setstring(ColumnNames.AnimalBirthFacility, value);
			}
		}

		public int AnimalPassportVersionNr
	    {
			get
	        {
				return base.Getint(ColumnNames.AnimalPassportVersionNr);
			}
			set
	        {
				base.Setint(ColumnNames.AnimalPassportVersionNr, value);
			}
		}

        public DateTime RequestDate
        {
            get
            {
                return base.GetDateTime(ColumnNames.RequestDate);
            }
            set
            {
                base.SetDateTime(ColumnNames.RequestDate, value);
            }
        }

        public int Changed_By
	    {
			get
	        {
				return base.Getint(ColumnNames.Changed_By);
			}
			set
	        {
				base.Setint(ColumnNames.Changed_By, value);
			}
		}

		public int SourceID
	    {
			get
	        {
				return base.Getint(ColumnNames.SourceID);
			}
			set
	        {
				base.Setint(ColumnNames.SourceID, value);
			}
		}


		#endregion
		
	}
}
