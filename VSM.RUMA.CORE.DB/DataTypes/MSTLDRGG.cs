
/*
'===============================================================================
'  Generated From - CSharp_VSM_BusinessEntity.vbgen
' 
'  ** IMPORTANT  ** 
'  How to Generate your stored procedures:
' 
'  SQL        = SQL_StoredProcs.vbgen
'  ACCESS     = Access_StoredProcs.vbgen
'  ORACLE     = Oracle_StoredProcs.vbgen
'  FIREBIRD   = FirebirdStoredProcs.vbgen
'  POSTGRESQL = PostgreSQL_StoredProcs.vbgen
'
'  The supporting base class  is in the Architecture directory in "VSM".
'  
'  This object is 'abstract' which means you need to inherit from it to be able
'  to instantiate it.  This is very easilly done. You can override properties and
'  methods in your derived class, this allows you to regenerate this class at any
'  time and not worry about overwriting custom code. 
'
'  NEVER EDIT THIS FILE.
'
'  public class YourObject :  _YourObject
'  {
'
'  }
'
'===============================================================================
*/

// Generated by MyGeneration Version # (1.3.0.3)
using System;
using System.Data;

using System.Collections;
using System.Collections.Specialized;


namespace VSM.RUMA.CORE.DB.DataTypes
{
    [Serializable()]
	public class MSTLDRGG : DataObject
	{
		public MSTLDRGG() : base(Database.agrofactuur)
		{
			UpdateParams = new String[] 
			{
            	"Internalnr"
			};
		
		}

	
		#region ColumnNames
		public class ColumnNamesMSTLDRGG
		{  
            public const string Internalnr = "Internalnr";
            public const string Mestnummer = "Mestnummer";
            public const string Jaar = "Jaar";
            public const string Soort = "Soort";
            public const string Datum = "Datum";
            public const string ProductType = "ProductType";
            public const string Product = "Product";
            public const string Gewicht = "Gewicht";
            public const string GewichtDS = "GewichtDS";
            public const string GehalteN = "GehalteN";
            public const string GehalteP = "GehalteP";
            public const string ThrId = "ThrId";
            public const string Prognose = "Prognose";
            public const string TotaalN = "TotaalN";
            public const string TotaalP2O5 = "TotaalP2O5";
 

		}
		#endregion




		#region Properties
	
		[System.ComponentModel.DataObjectField(true, true, false)] 
		public int Internalnr
	    {
			get
	        {
				return base.Getint(ColumnNamesMSTLDRGG.Internalnr);
			}
			set
	        {
				base.Setint(ColumnNamesMSTLDRGG.Internalnr, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public string Mestnummer
	    {
			get
	        {
				return base.Getstring(ColumnNamesMSTLDRGG.Mestnummer);
			}
			set
	        {
				base.Setstring(ColumnNamesMSTLDRGG.Mestnummer, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int Jaar
	    {
			get
	        {
				return base.Getint(ColumnNamesMSTLDRGG.Jaar);
			}
			set
	        {
				base.Setint(ColumnNamesMSTLDRGG.Jaar, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int Soort
	    {
			get
	        {
				return base.Getint(ColumnNamesMSTLDRGG.Soort);
			}
			set
	        {
				base.Setint(ColumnNamesMSTLDRGG.Soort, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public DateTime Datum
	    {
			get
	        {
				return base.GetDateTime(ColumnNamesMSTLDRGG.Datum);
			}
			set
	        {
				base.SetDateTime(ColumnNamesMSTLDRGG.Datum, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int ProductType
	    {
			get
	        {
				return base.Getint(ColumnNamesMSTLDRGG.ProductType);
			}
			set
	        {
				base.Setint(ColumnNamesMSTLDRGG.ProductType, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int Product
	    {
			get
	        {
				return base.Getint(ColumnNamesMSTLDRGG.Product);
			}
			set
	        {
				base.Setint(ColumnNamesMSTLDRGG.Product, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public double Gewicht
	    {
			get
	        {
				return base.Getdouble(ColumnNamesMSTLDRGG.Gewicht);
			}
			set
	        {
				base.Setdouble(ColumnNamesMSTLDRGG.Gewicht, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public double GewichtDS
	    {
			get
	        {
				return base.Getdouble(ColumnNamesMSTLDRGG.GewichtDS);
			}
			set
	        {
				base.Setdouble(ColumnNamesMSTLDRGG.GewichtDS, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public double GehalteN
	    {
			get
	        {
				return base.Getdouble(ColumnNamesMSTLDRGG.GehalteN);
			}
			set
	        {
				base.Setdouble(ColumnNamesMSTLDRGG.GehalteN, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public double GehalteP
	    {
			get
	        {
				return base.Getdouble(ColumnNamesMSTLDRGG.GehalteP);
			}
			set
	        {
				base.Setdouble(ColumnNamesMSTLDRGG.GehalteP, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int ThrId
	    {
			get
	        {
				return base.Getint(ColumnNamesMSTLDRGG.ThrId);
			}
			set
	        {
				base.Setint(ColumnNamesMSTLDRGG.ThrId, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int Prognose
	    {
			get
	        {
				return base.Getint(ColumnNamesMSTLDRGG.Prognose);
			}
			set
	        {
				base.Setint(ColumnNamesMSTLDRGG.Prognose, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public double TotaalN
	    {
			get
	        {
				return base.Getdouble(ColumnNamesMSTLDRGG.TotaalN);
			}
			set
	        {
				base.Setdouble(ColumnNamesMSTLDRGG.TotaalN, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public double TotaalP2O5
	    {
			get
	        {
				return base.Getdouble(ColumnNamesMSTLDRGG.TotaalP2O5);
			}
			set
	        {
				base.Setdouble(ColumnNamesMSTLDRGG.TotaalP2O5, value);
			}
		}


		#endregion
		
	}
}
