
/*
'===============================================================================
'  Generated From - CSharp_VSM_BusinessEntity.vbgen
' 
'  ** IMPORTANT  ** 
'  How to Generate your stored procedures:
' 
'  SQL        = SQL_StoredProcs.vbgen
'  ACCESS     = Access_StoredProcs.vbgen
'  ORACLE     = Oracle_StoredProcs.vbgen
'  FIREBIRD   = FirebirdStoredProcs.vbgen
'  POSTGRESQL = PostgreSQL_StoredProcs.vbgen
'
'  The supporting base class  is in the Architecture directory in "VSM".
'  
'  This object is 'abstract' which means you need to inherit from it to be able
'  to instantiate it.  This is very easilly done. You can override properties and
'  methods in your derived class, this allows you to regenerate this class at any
'  time and not worry about overwriting custom code. 
'
'  NEVER EDIT THIS FILE.
'
'  public class YourObject :  _YourObject
'  {
'
'  }
'
'===============================================================================
*/

// Generated by MyGeneration Version # (1.3.0.3)
using System;
using System.Data;

using System.Collections;
using System.Collections.Specialized;


namespace VSM.RUMA.CORE.DB.DataTypes
{
    [Serializable()]
	public class PLACE : DataObject
	{
		public PLACE() : base(Database.animal)
		{
			UpdateParams = new String[] 
			{
            	"MovId"
			};
		
		}

	
		#region ColumnNames
		public class ColumnNamesPLACE
		{  
            public const string FarmNumber = "FarmNumber";
            public const string AniId = "AniId";
            public const string MovId = "MovId";
            public const string StableNr = "StableNr";
            public const string SectionNr = "SectionNr";
            public const string CageNr = "CageNr";
            public const string Mestnummer = "Mestnummer";
            public const string Groupnr = "Groupnr";
 

		}
		#endregion




		#region Properties
	
		[System.ComponentModel.DataObjectField(false, false, false)] 
		public string FarmNumber
	    {
			get
	        {
				return base.Getstring(ColumnNamesPLACE.FarmNumber);
			}
			set
	        {
				base.Setstring(ColumnNamesPLACE.FarmNumber, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int AniId
	    {
			get
	        {
				return base.Getint(ColumnNamesPLACE.AniId);
			}
			set
	        {
				base.Setint(ColumnNamesPLACE.AniId, value);
			}
		}

		[System.ComponentModel.DataObjectField(true, false, false)] 
		public int MovId
	    {
			get
	        {
				return base.Getint(ColumnNamesPLACE.MovId);
			}
			set
	        {
				base.Setint(ColumnNamesPLACE.MovId, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int StableNr
	    {
			get
	        {
				return base.Getint(ColumnNamesPLACE.StableNr);
			}
			set
	        {
				base.Setint(ColumnNamesPLACE.StableNr, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int SectionNr
	    {
			get
	        {
				return base.Getint(ColumnNamesPLACE.SectionNr);
			}
			set
	        {
				base.Setint(ColumnNamesPLACE.SectionNr, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public string CageNr
	    {
			get
	        {
				return base.Getstring(ColumnNamesPLACE.CageNr);
			}
			set
	        {
				base.Setstring(ColumnNamesPLACE.CageNr, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public string Mestnummer
	    {
			get
	        {
				return base.Getstring(ColumnNamesPLACE.Mestnummer);
			}
			set
	        {
				base.Setstring(ColumnNamesPLACE.Mestnummer, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int Groupnr
	    {
			get
	        {
				return base.Getint(ColumnNamesPLACE.Groupnr);
			}
			set
	        {
				base.Setint(ColumnNamesPLACE.Groupnr, value);
			}
		}


		#endregion
		
	}
}
