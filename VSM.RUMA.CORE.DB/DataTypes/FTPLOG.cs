
/*
'===============================================================================
'  Generated From - CSharp_VSM_BusinessEntity.vbgen
' 
'  ** IMPORTANT  ** 
'  How to Generate your stored procedures:
' 
'  SQL        = SQL_StoredProcs.vbgen
'  ACCESS     = Access_StoredProcs.vbgen
'  ORACLE     = Oracle_StoredProcs.vbgen
'  FIREBIRD   = FirebirdStoredProcs.vbgen
'  POSTGRESQL = PostgreSQL_StoredProcs.vbgen
'
'  The supporting base class  is in the Architecture directory in "VSM".
'  
'  This object is 'abstract' which means you need to inherit from it to be able
'  to instantiate it.  This is very easilly done. You can override properties and
'  methods in your derived class, this allows you to regenerate this class at any
'  time and not worry about overwriting custom code. 
'
'  NEVER EDIT THIS FILE.
'
'  public class YourObject :  _YourObject
'  {
'
'  }
'
'===============================================================================
*/

// Generated by MyGeneration Version # (1.3.0.3)
using System;
using System.Data;

using System.Collections;
using System.Collections.Specialized;


namespace VSM.RUMA.CORE.DB.DataTypes
{
    [Serializable()]
	public class FTPLOG : DataObject
	{
		public FTPLOG() : base(Database.agrofactuur)
		{
			UpdateParams = new String[] 
			{
            	"LogId"
			};
		
		}

	
		#region ColumnNames
		public class ColumnNamesFTPLOG
		{  
            public const string LogId = "LogId";
            public const string LogDate = "LogDate";
            public const string LogTime = "LogTime";
            public const string LogFilename = "LogFilename";
            public const string LogSentFile = "LogSentFile";
            public const string LogResult = "LogResult";
 

		}
		#endregion




		#region Properties
	
		[System.ComponentModel.DataObjectField(true, true, false)] 
		public int LogId
	    {
			get
	        {
				return base.Getint(ColumnNamesFTPLOG.LogId);
			}
			set
	        {
				base.Setint(ColumnNamesFTPLOG.LogId, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public DateTime LogDate
	    {
			get
	        {
				return base.GetDateTime(ColumnNamesFTPLOG.LogDate);
			}
			set
	        {
				base.SetDateTime(ColumnNamesFTPLOG.LogDate, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public DateTime LogTime
	    {
			get
	        {
				return base.GetDateTime(ColumnNamesFTPLOG.LogTime);
			}
			set
	        {
				base.SetDateTime(ColumnNamesFTPLOG.LogTime, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public string LogFilename
	    {
			get
	        {
				return base.Getstring(ColumnNamesFTPLOG.LogFilename);
			}
			set
	        {
				base.Setstring(ColumnNamesFTPLOG.LogFilename, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public sbyte LogSentFile
	    {
			get
	        {
				return base.Getsbyte(ColumnNamesFTPLOG.LogSentFile);
			}
			set
	        {
				base.Setsbyte(ColumnNamesFTPLOG.LogSentFile, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int LogResult
	    {
			get
	        {
				return base.Getint(ColumnNamesFTPLOG.LogResult);
			}
			set
	        {
				base.Setint(ColumnNamesFTPLOG.LogResult, value);
			}
		}


		#endregion
		
	}
}
