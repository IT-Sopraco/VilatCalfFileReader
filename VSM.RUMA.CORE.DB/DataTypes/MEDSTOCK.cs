
/*
'===============================================================================
'  Generated From - CSharp_VSM_BusinessEntity.vbgen
' 
'  ** IMPORTANT  ** 
'  How to Generate your stored procedures:
' 
'  SQL        = SQL_StoredProcs.vbgen
'  ACCESS     = Access_StoredProcs.vbgen
'  ORACLE     = Oracle_StoredProcs.vbgen
'  FIREBIRD   = FirebirdStoredProcs.vbgen
'  POSTGRESQL = PostgreSQL_StoredProcs.vbgen
'
'  The supporting base class  is in the Architecture directory in "VSM".
'  
'  This object is 'abstract' which means you need to inherit from it to be able
'  to instantiate it.  This is very easilly done. You can override properties and
'  methods in your derived class, this allows you to regenerate this class at any
'  time and not worry about overwriting custom code. 
'
'  NEVER EDIT THIS FILE.
'
'  public class YourObject :  _YourObject
'  {
'
'  }
'
'===============================================================================
*/

// Generated by MyGeneration Version # (1.3.0.3)
using System;
using System.Data;

using System.Collections;
using System.Collections.Specialized;


namespace VSM.RUMA.CORE.DB.DataTypes
{
    [Serializable()]
	public class MEDSTOCK : DataObject
	{
		public MEDSTOCK() : base(Database.animal)
		{
			UpdateParams = new String[] 
			{
            	"MedStockId"
			};
		
		}

	
		#region ColumnNames
		public class ColumnNamesMEDSTOCK
		{  
            public const string MedStockId = "MedStockId";
            public const string MSDate = "MSDate";
            public const string MSMedId = "MSMedId";
            public const string MSQuantity = "MSQuantity";
            public const string MSMedunit = "MSMedunit";
            public const string MSRemark = "MSRemark";
            public const string FarmID = "FarmID";
            public const string MSMutation = "MSMutation";
            public const string MSTreatId = "MSTreatId";
            public const string MSBatchNumber = "MSBatchNumber";
            public const string MSThrid = "MSThrid";
            public const string SupplyId = "SupplyId";
 

		}
		#endregion




		#region Properties
	
		[System.ComponentModel.DataObjectField(true, true, false)] 
		public int MedStockId
	    {
			get
	        {
				return base.Getint(ColumnNamesMEDSTOCK.MedStockId);
			}
			set
	        {
				base.Setint(ColumnNamesMEDSTOCK.MedStockId, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public DateTime MSDate
	    {
			get
	        {
				return base.GetDateTime(ColumnNamesMEDSTOCK.MSDate);
			}
			set
	        {
				base.SetDateTime(ColumnNamesMEDSTOCK.MSDate, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int MSMedId
	    {
			get
	        {
				return base.Getint(ColumnNamesMEDSTOCK.MSMedId);
			}
			set
	        {
				base.Setint(ColumnNamesMEDSTOCK.MSMedId, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public double MSQuantity
	    {
			get
	        {
				return base.Getdouble(ColumnNamesMEDSTOCK.MSQuantity);
			}
			set
	        {
				base.Setdouble(ColumnNamesMEDSTOCK.MSQuantity, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int MSMedunit
	    {
			get
	        {
				return base.Getint(ColumnNamesMEDSTOCK.MSMedunit);
			}
			set
	        {
				base.Setint(ColumnNamesMEDSTOCK.MSMedunit, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public string MSRemark
	    {
			get
	        {
				return base.Getstring(ColumnNamesMEDSTOCK.MSRemark);
			}
			set
	        {
				base.Setstring(ColumnNamesMEDSTOCK.MSRemark, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int FarmID
	    {
			get
	        {
				return base.Getint(ColumnNamesMEDSTOCK.FarmID);
			}
			set
	        {
				base.Setint(ColumnNamesMEDSTOCK.FarmID, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int MSMutation
	    {
			get
	        {
				return base.Getint(ColumnNamesMEDSTOCK.MSMutation);
			}
			set
	        {
				base.Setint(ColumnNamesMEDSTOCK.MSMutation, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int MSTreatId
	    {
			get
	        {
				return base.Getint(ColumnNamesMEDSTOCK.MSTreatId);
			}
			set
	        {
				base.Setint(ColumnNamesMEDSTOCK.MSTreatId, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public string MSBatchNumber
	    {
			get
	        {
				return base.Getstring(ColumnNamesMEDSTOCK.MSBatchNumber);
			}
			set
	        {
				base.Setstring(ColumnNamesMEDSTOCK.MSBatchNumber, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int MSThrid
	    {
			get
	        {
				return base.Getint(ColumnNamesMEDSTOCK.MSThrid);
			}
			set
	        {
				base.Setint(ColumnNamesMEDSTOCK.MSThrid, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int SupplyId
	    {
			get
	        {
				return base.Getint(ColumnNamesMEDSTOCK.SupplyId);
			}
			set
	        {
				base.Setint(ColumnNamesMEDSTOCK.SupplyId, value);
			}
		}


		#endregion
		
	}
}
