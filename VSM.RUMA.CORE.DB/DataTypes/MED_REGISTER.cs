
/*
'===============================================================================
'  Generated From - CSharp_VSM_BusinessEntity.vbgen
' 
'  ** IMPORTANT  ** 
'  How to Generate your stored procedures:
' 
'  SQL        = SQL_StoredProcs.vbgen
'  ACCESS     = Access_StoredProcs.vbgen
'  ORACLE     = Oracle_StoredProcs.vbgen
'  FIREBIRD   = FirebirdStoredProcs.vbgen
'  POSTGRESQL = PostgreSQL_StoredProcs.vbgen
'
'  The supporting base class  is in the Architecture directory in "VSM".
'  
'  This object is 'abstract' which means you need to inherit from it to be able
'  to instantiate it.  This is very easilly done. You can override properties and
'  methods in your derived class, this allows you to regenerate this class at any
'  time and not worry about overwriting custom code. 
'
'  NEVER EDIT THIS FILE.
'
'  public class YourObject :  _YourObject
'  {
'
'  }
'
'===============================================================================
*/

// Generated by MyGeneration Version # (1.3.0.3)
using System;
using System.Data;

using System.Collections;
using System.Collections.Specialized;


namespace VSM.RUMA.CORE.DB.DataTypes
{
    [Serializable()]
	public class MED_REGISTER : DataObject
	{
		public MED_REGISTER() : base(Database.agrofactuur)
		{
			UpdateParams = new String[] 
			{
            	"MedRegId"
			};
		
		}

	
		#region ColumnNames
		public class ColumnNamesMED_REGISTER
		{  
            public const string MedRegId = "MedRegId";
            public const string MedRegRegNL = "MedRegRegNL";
            public const string MedRegDatum = "MedRegDatum";
            public const string MedFabrikantId = "MedFabrikantId";
            public const string MedRegRegEU = "MedRegRegEU";
            public const string MedRegNaam = "MedRegNaam";
 

		}
		#endregion




		#region Properties
	
		[System.ComponentModel.DataObjectField(true, true, false)] 
		public int MedRegId
	    {
			get
	        {
				return base.Getint(ColumnNamesMED_REGISTER.MedRegId);
			}
			set
	        {
				base.Setint(ColumnNamesMED_REGISTER.MedRegId, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public string MedRegRegNL
	    {
			get
	        {
				return base.Getstring(ColumnNamesMED_REGISTER.MedRegRegNL);
			}
			set
	        {
				base.Setstring(ColumnNamesMED_REGISTER.MedRegRegNL, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public DateTime MedRegDatum
	    {
			get
	        {
				return base.GetDateTime(ColumnNamesMED_REGISTER.MedRegDatum);
			}
			set
	        {
				base.SetDateTime(ColumnNamesMED_REGISTER.MedRegDatum, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int MedFabrikantId
	    {
			get
	        {
				return base.Getint(ColumnNamesMED_REGISTER.MedFabrikantId);
			}
			set
	        {
				base.Setint(ColumnNamesMED_REGISTER.MedFabrikantId, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public string MedRegRegEU
	    {
			get
	        {
				return base.Getstring(ColumnNamesMED_REGISTER.MedRegRegEU);
			}
			set
	        {
				base.Setstring(ColumnNamesMED_REGISTER.MedRegRegEU, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public string MedRegNaam
	    {
			get
	        {
				return base.Getstring(ColumnNamesMED_REGISTER.MedRegNaam);
			}
			set
	        {
				base.Setstring(ColumnNamesMED_REGISTER.MedRegNaam, value);
			}
		}


		#endregion
		
	}
}
