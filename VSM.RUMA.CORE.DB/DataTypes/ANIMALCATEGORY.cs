
/*
'===============================================================================
'  Generated From - CSharp_VSM_BusinessEntity.vbgen
' 
'  ** IMPORTANT  ** 
'  How to Generate your stored procedures:
' 
'  SQL        = SQL_StoredProcs.vbgen
'  ACCESS     = Access_StoredProcs.vbgen
'  ORACLE     = Oracle_StoredProcs.vbgen
'  FIREBIRD   = FirebirdStoredProcs.vbgen
'  POSTGRESQL = PostgreSQL_StoredProcs.vbgen
'
'  The supporting base class  is in the Architecture directory in "VSM".
'  
'  This object is 'abstract' which means you need to inherit from it to be able
'  to instantiate it.  This is very easilly done. You can override properties and
'  methods in your derived class, this allows you to regenerate this class at any
'  time and not worry about overwriting custom code. 
'
'  NEVER EDIT THIS FILE.
'
'  public class YourObject :  _YourObject
'  {
'
'  }
'
'===============================================================================
*/

// Generated by MyGeneration Version # (1.3.0.3)
using System;
using System.Data;

using System.Collections;
using System.Collections.Specialized;


namespace VSM.RUMA.CORE.DB.DataTypes
{
    [Serializable()]
	public class ANIMALCATEGORY : DataObject
	{
		public ANIMALCATEGORY() : base(Database.animal)
		{
			UpdateParams = new String[] 
			{
            	"FarmId",
            	"AniId"
			};
		
		}

	
		#region ColumnNames
		public class ColumnNamesANIMALCATEGORY
		{  
            public const string FarmId = "FarmId";
            public const string UbnId = "UbnId";
            public const string AniId = "AniId";
            public const string Anicategory = "Anicategory";
            public const string AniWorknumber = "AniWorknumber";
            public const string AniMinasCategory = "AniMinasCategory";
            public const string Ani_Mede_Eigenaar = "Ani_Mede_Eigenaar";
            public const string AniComment = "AniComment";
            public const string Deleted = "deleted";
 

		}
		#endregion




		#region Properties
	
		[System.ComponentModel.DataObjectField(true, false, false)] 
		public int FarmId
	    {
			get
	        {
				return base.Getint(ColumnNamesANIMALCATEGORY.FarmId);
			}
			set
	        {
				base.Setint(ColumnNamesANIMALCATEGORY.FarmId, value);
			}
		}

		[System.ComponentModel.DataObjectField(true, false, false)] 
		public int AniId
	    {
			get
	        {
				return base.Getint(ColumnNamesANIMALCATEGORY.AniId);
			}
			set
	        {
				base.Setint(ColumnNamesANIMALCATEGORY.AniId, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int Anicategory
	    {
			get
	        {
				return base.Getint(ColumnNamesANIMALCATEGORY.Anicategory);
			}
			set
	        {
				base.Setint(ColumnNamesANIMALCATEGORY.Anicategory, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public string AniWorknumber
	    {
			get
	        {
				return base.Getstring(ColumnNamesANIMALCATEGORY.AniWorknumber);
			}
			set
	        {
				base.Setstring(ColumnNamesANIMALCATEGORY.AniWorknumber, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int AniMinasCategory
	    {
			get
	        {
				return base.Getint(ColumnNamesANIMALCATEGORY.AniMinasCategory);
			}
			set
	        {
				base.Setint(ColumnNamesANIMALCATEGORY.AniMinasCategory, value);
			}
		}

        [System.ComponentModel.DataObjectField(false, false, false)]
        public int UbnId
        {
            get
            {
                return base.Getint(ColumnNamesANIMALCATEGORY.UbnId);
            }
            set
            {
                base.Setint(ColumnNamesANIMALCATEGORY.UbnId, value);
            }
        }

        [System.ComponentModel.DataObjectField(false, false, false)] 
		public sbyte Ani_Mede_Eigenaar
	    {
			get
	        {
				return base.Getsbyte(ColumnNamesANIMALCATEGORY.Ani_Mede_Eigenaar);
			}
			set
	        {
				base.Setsbyte(ColumnNamesANIMALCATEGORY.Ani_Mede_Eigenaar, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public string AniComment
	    {
			get
	        {
				return base.Getstring(ColumnNamesANIMALCATEGORY.AniComment);
			}
			set
	        {
				base.Setstring(ColumnNamesANIMALCATEGORY.AniComment, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public sbyte Deleted
	    {
			get
	        {
				return base.Getsbyte(ColumnNamesANIMALCATEGORY.Deleted);
			}
			set
	        {
				base.Setsbyte(ColumnNamesANIMALCATEGORY.Deleted, value);
			}
		}


        #endregion


        public override string ToString()
        {
            return $"AnimalCategory [AniId: {AniId} FarmId: {FarmId}: Category: {Anicategory}]";
        }
    }
}
