
/*
'===============================================================================
'  Generated From - CSharp_VSM_BusinessEntity.vbgen
' 
'  ** IMPORTANT  ** 
'  How to Generate your stored procedures:
' 
'  SQL        = SQL_StoredProcs.vbgen
'  ACCESS     = Access_StoredProcs.vbgen
'  ORACLE     = Oracle_StoredProcs.vbgen
'  FIREBIRD   = FirebirdStoredProcs.vbgen
'  POSTGRESQL = PostgreSQL_StoredProcs.vbgen
'
'  The supporting base class  is in the Architecture directory in "VSM".
'  
'  This object is 'abstract' which means you need to inherit from it to be able
'  to instantiate it.  This is very easilly done. You can override properties and
'  methods in your derived class, this allows you to regenerate this class at any
'  time and not worry about overwriting custom code. 
'
'  NEVER EDIT THIS FILE.
'
'  public class YourObject :  _YourObject
'  {
'
'  }
'
'===============================================================================
*/

// Generated by MyGeneration Version # (1.3.0.3)
using System;
using System.Data;

using System.Collections;
using System.Collections.Specialized;


namespace VSM.RUMA.CORE.DB.DataTypes
{
    [Serializable()]
	public class INSEMIN : DataObject
	{
		public INSEMIN() : base(Database.animal)
		{
			UpdateParams = new String[] 
			{
            	"EventId"
			};
		
		}

	
		#region ColumnNames
		public class ColumnNamesINSEMIN
		{  
            public const string EventId = "EventId";
            public const string AniIdFather = "AniIdFather";
            public const string InsChargeNumber = "InsChargeNumber";
            public const string InsKind = "InsKind";
            public const string ReportTo = "ReportTo";
            public const string ReportDate = "ReportDate";
            public const string InsBlockColor = "InsBlockColor";
            public const string ReportStatus = "ReportStatus";
            public const string Imported = "Imported";
            public const string InsPMSG = "InsPMSG";
            public const string InsPayedReInsem = "InsPayedReInsem";
            public const string InsAmount = "InsAmount";
            public const string InsFromOwnTank = "InsFromOwnTank";
            public const string InsReservedSemen = "InsReservedSemen";
 

		}
		#endregion




		#region Properties
	
		[System.ComponentModel.DataObjectField(true, false, false)] 
		public int EventId
	    {
			get
	        {
				return base.Getint(ColumnNamesINSEMIN.EventId);
			}
			set
	        {
				base.Setint(ColumnNamesINSEMIN.EventId, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int AniIdFather
	    {
			get
	        {
				return base.Getint(ColumnNamesINSEMIN.AniIdFather);
			}
			set
	        {
				base.Setint(ColumnNamesINSEMIN.AniIdFather, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public string InsChargeNumber
	    {
			get
	        {
				return base.Getstring(ColumnNamesINSEMIN.InsChargeNumber);
			}
			set
	        {
				base.Setstring(ColumnNamesINSEMIN.InsChargeNumber, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int InsKind
	    {
			get
	        {
				return base.Getint(ColumnNamesINSEMIN.InsKind);
			}
			set
	        {
				base.Setint(ColumnNamesINSEMIN.InsKind, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int ReportTo
	    {
			get
	        {
				return base.Getint(ColumnNamesINSEMIN.ReportTo);
			}
			set
	        {
				base.Setint(ColumnNamesINSEMIN.ReportTo, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public DateTime ReportDate
	    {
			get
	        {
				return base.GetDateTime(ColumnNamesINSEMIN.ReportDate);
			}
			set
	        {
				base.SetDateTime(ColumnNamesINSEMIN.ReportDate, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int InsBlockColor
	    {
			get
	        {
				return base.Getint(ColumnNamesINSEMIN.InsBlockColor);
			}
			set
	        {
				base.Setint(ColumnNamesINSEMIN.InsBlockColor, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int ReportStatus
	    {
			get
	        {
				return base.Getint(ColumnNamesINSEMIN.ReportStatus);
			}
			set
	        {
				base.Setint(ColumnNamesINSEMIN.ReportStatus, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int Imported
	    {
			get
	        {
				return base.Getint(ColumnNamesINSEMIN.Imported);
			}
			set
	        {
				base.Setint(ColumnNamesINSEMIN.Imported, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int InsPMSG
	    {
			get
	        {
				return base.Getint(ColumnNamesINSEMIN.InsPMSG);
			}
			set
	        {
				base.Setint(ColumnNamesINSEMIN.InsPMSG, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int InsPayedReInsem
	    {
			get
	        {
				return base.Getint(ColumnNamesINSEMIN.InsPayedReInsem);
			}
			set
	        {
				base.Setint(ColumnNamesINSEMIN.InsPayedReInsem, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int InsAmount
	    {
			get
	        {
				return base.Getint(ColumnNamesINSEMIN.InsAmount);
			}
			set
	        {
				base.Setint(ColumnNamesINSEMIN.InsAmount, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int InsFromOwnTank
	    {
			get
	        {
				return base.Getint(ColumnNamesINSEMIN.InsFromOwnTank);
			}
			set
	        {
				base.Setint(ColumnNamesINSEMIN.InsFromOwnTank, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int InsReservedSemen
	    {
			get
	        {
				return base.Getint(ColumnNamesINSEMIN.InsReservedSemen);
			}
			set
	        {
				base.Setint(ColumnNamesINSEMIN.InsReservedSemen, value);
			}
		}


		#endregion
		
	}
}
