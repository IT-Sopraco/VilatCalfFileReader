
/*
'===============================================================================
'  Generated From - CSharp_VSM_BusinessEntity.vbgen
' 
'  ** IMPORTANT  ** 
'  How to Generate your stored procedures:
' 
'  SQL        = SQL_StoredProcs.vbgen
'  ACCESS     = Access_StoredProcs.vbgen
'  ORACLE     = Oracle_StoredProcs.vbgen
'  FIREBIRD   = FirebirdStoredProcs.vbgen
'  POSTGRESQL = PostgreSQL_StoredProcs.vbgen
'
'  The supporting base class  is in the Architecture directory in "VSM".
'  
'  This object is 'abstract' which means you need to inherit from it to be able
'  to instantiate it.  This is very easilly done. You can override properties and
'  methods in your derived class, this allows you to regenerate this class at any
'  time and not worry about overwriting custom code. 
'
'  NEVER EDIT THIS FILE.
'
'  public class YourObject :  _YourObject
'  {
'
'  }
'
'===============================================================================
*/

// Generated by MyGeneration Version # (1.3.0.3)
using System;
using System.Data;

using System.Collections;
using System.Collections.Specialized;


namespace VSM.RUMA.CORE.DB.DataTypes
{
    [Serializable()]
	public class RIGHT_LABELS : DataObject
	{
		public RIGHT_LABELS() : base(Database.agrofactuur)
		{
			UpdateParams = new String[] 
			{
            	"CountryID",
            	"ProgID",
            	"ObjectID",
            	"ModuleID"
			};
		
		}

	
		#region ColumnNames
		public class ColumnNamesRIGHT_LABELS
		{  
            public const string CountryID = "CountryID";
            public const string ProgID = "ProgID";
            public const string ObjectID = "ObjectID";
            public const string DisplayName = "DisplayName";
            public const string TypeID = "TypeID";
            public const string ModuleID = "ModuleID";
            public const string User_Definable = "User_Definable";
            public const string Parent_ObjectID = "Parent_ObjectID";
            public const string Labkind = "Labkind";
            public const string LabID = "LabID";
 

		}
		#endregion




		#region Properties
	
		[System.ComponentModel.DataObjectField(true, false, false)] 
		public int CountryID
	    {
			get
	        {
				return base.Getint(ColumnNamesRIGHT_LABELS.CountryID);
			}
			set
	        {
				base.Setint(ColumnNamesRIGHT_LABELS.CountryID, value);
			}
		}

		[System.ComponentModel.DataObjectField(true, false, false)] 
		public int ProgID
	    {
			get
	        {
				return base.Getint(ColumnNamesRIGHT_LABELS.ProgID);
			}
			set
	        {
				base.Setint(ColumnNamesRIGHT_LABELS.ProgID, value);
			}
		}

		[System.ComponentModel.DataObjectField(true, false, false)] 
		public string ObjectID
	    {
			get
	        {
				return base.Getstring(ColumnNamesRIGHT_LABELS.ObjectID);
			}
			set
	        {
				base.Setstring(ColumnNamesRIGHT_LABELS.ObjectID, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public string DisplayName
	    {
			get
	        {
				return base.Getstring(ColumnNamesRIGHT_LABELS.DisplayName);
			}
			set
	        {
				base.Setstring(ColumnNamesRIGHT_LABELS.DisplayName, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int TypeID
	    {
			get
	        {
				return base.Getint(ColumnNamesRIGHT_LABELS.TypeID);
			}
			set
	        {
				base.Setint(ColumnNamesRIGHT_LABELS.TypeID, value);
			}
		}

		[System.ComponentModel.DataObjectField(true, false, false)] 
		public int ModuleID
	    {
			get
	        {
				return base.Getint(ColumnNamesRIGHT_LABELS.ModuleID);
			}
			set
	        {
				base.Setint(ColumnNamesRIGHT_LABELS.ModuleID, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public sbyte User_Definable
	    {
			get
	        {
				return base.Getsbyte(ColumnNamesRIGHT_LABELS.User_Definable);
			}
			set
	        {
				base.Setsbyte(ColumnNamesRIGHT_LABELS.User_Definable, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public string Parent_ObjectID
	    {
			get
	        {
				return base.Getstring(ColumnNamesRIGHT_LABELS.Parent_ObjectID);
			}
			set
	        {
				base.Setstring(ColumnNamesRIGHT_LABELS.Parent_ObjectID, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int Labkind
	    {
			get
	        {
				return base.Getint(ColumnNamesRIGHT_LABELS.Labkind);
			}
			set
	        {
				base.Setint(ColumnNamesRIGHT_LABELS.Labkind, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int LabID
	    {
			get
	        {
				return base.Getint(ColumnNamesRIGHT_LABELS.LabID);
			}
			set
	        {
				base.Setint(ColumnNamesRIGHT_LABELS.LabID, value);
			}
		}


		#endregion
		
	}
}
