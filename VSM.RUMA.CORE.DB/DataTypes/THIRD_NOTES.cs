
/*
'===============================================================================
'  Generated From - CSharp_VSM_BusinessEntity.vbgen
' 
'  ** IMPORTANT  ** 
'  How to Generate your stored procedures:
' 
'  SQL        = SQL_StoredProcs.vbgen
'  ACCESS     = Access_StoredProcs.vbgen
'  ORACLE     = Oracle_StoredProcs.vbgen
'  FIREBIRD   = FirebirdStoredProcs.vbgen
'  POSTGRESQL = PostgreSQL_StoredProcs.vbgen
'
'  The supporting base class  is in the Architecture directory in "VSM".
'  
'  This object is 'abstract' which means you need to inherit from it to be able
'  to instantiate it.  This is very easilly done. You can override properties and
'  methods in your derived class, this allows you to regenerate this class at any
'  time and not worry about overwriting custom code. 
'
'  NEVER EDIT THIS FILE.
'
'  public class YourObject :  _YourObject
'  {
'
'  }
'
'===============================================================================
*/

// Generated by MyGeneration Version # (1.3.0.3)
using System;
using System.Data;

using System.Collections;
using System.Collections.Specialized;


namespace VSM.RUMA.CORE.DB.DataTypes
{
    [Serializable()]
	public class THIRD_NOTES : DataObject
	{
		public THIRD_NOTES() : base(Database.agrofactuur)
		{
			UpdateParams = new String[] 
			{
            	"No_ID"
			};
		
		}

	
		#region ColumnNames
		public class ColumnNamesTHIRD_NOTES
		{  
            public const string ThrId = "ThrId";
            public const string AdmisID = "AdmisID";
            public const string FarmID = "FarmID";
            public const string No_ID = "No_ID";
            public const string No_ThrId = "No_ThrId";
            public const string No_DateTime = "No_DateTime";
            public const string No_Kind = "No_Kind";
            public const string No_Text = "No_Text";
            public const string No_Done = "No_Done";
 

		}
		#endregion




		#region Properties
	
		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int ThrId
	    {
			get
	        {
				return base.Getint(ColumnNamesTHIRD_NOTES.ThrId);
			}
			set
	        {
				base.Setint(ColumnNamesTHIRD_NOTES.ThrId, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int AdmisID
	    {
			get
	        {
				return base.Getint(ColumnNamesTHIRD_NOTES.AdmisID);
			}
			set
	        {
				base.Setint(ColumnNamesTHIRD_NOTES.AdmisID, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int FarmID
	    {
			get
	        {
				return base.Getint(ColumnNamesTHIRD_NOTES.FarmID);
			}
			set
	        {
				base.Setint(ColumnNamesTHIRD_NOTES.FarmID, value);
			}
		}

		[System.ComponentModel.DataObjectField(true, true, false)] 
		public int No_ID
	    {
			get
	        {
				return base.Getint(ColumnNamesTHIRD_NOTES.No_ID);
			}
			set
	        {
				base.Setint(ColumnNamesTHIRD_NOTES.No_ID, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int No_ThrId
	    {
			get
	        {
				return base.Getint(ColumnNamesTHIRD_NOTES.No_ThrId);
			}
			set
	        {
				base.Setint(ColumnNamesTHIRD_NOTES.No_ThrId, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public DateTime No_DateTime
	    {
			get
	        {
				return base.GetDateTime(ColumnNamesTHIRD_NOTES.No_DateTime);
			}
			set
	        {
				base.SetDateTime(ColumnNamesTHIRD_NOTES.No_DateTime, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int No_Kind
	    {
			get
	        {
				return base.Getint(ColumnNamesTHIRD_NOTES.No_Kind);
			}
			set
	        {
				base.Setint(ColumnNamesTHIRD_NOTES.No_Kind, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public string No_Text
	    {
			get
	        {
				return base.Getstring(ColumnNamesTHIRD_NOTES.No_Text);
			}
			set
	        {
				base.Setstring(ColumnNamesTHIRD_NOTES.No_Text, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public sbyte No_Done
	    {
			get
	        {
				return base.Getsbyte(ColumnNamesTHIRD_NOTES.No_Done);
			}
			set
	        {
				base.Setsbyte(ColumnNamesTHIRD_NOTES.No_Done, value);
			}
		}


		#endregion
		
	}
}
