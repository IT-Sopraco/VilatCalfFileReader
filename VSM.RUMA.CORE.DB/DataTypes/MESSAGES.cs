
/*
'===============================================================================
'  Generated From - CSharp_VSM_BusinessEntity.vbgen
' 
'  ** IMPORTANT  ** 
'  How to Generate your stored procedures:
' 
'  SQL        = SQL_StoredProcs.vbgen
'  ACCESS     = Access_StoredProcs.vbgen
'  ORACLE     = Oracle_StoredProcs.vbgen
'  FIREBIRD   = FirebirdStoredProcs.vbgen
'  POSTGRESQL = PostgreSQL_StoredProcs.vbgen
'
'  The supporting base class  is in the Architecture directory in "VSM".
'  
'  This object is 'abstract' which means you need to inherit from it to be able
'  to instantiate it.  This is very easilly done. You can override properties and
'  methods in your derived class, this allows you to regenerate this class at any
'  time and not worry about overwriting custom code. 
'
'  NEVER EDIT THIS FILE.
'
'  public class YourObject :  _YourObject
'  {
'
'  }
'
'===============================================================================
*/

// Generated by MyGeneration Version # (1.3.0.3)
using System;
using System.Data;

using System.Collections;
using System.Collections.Specialized;


namespace VSM.RUMA.CORE.DB.DataTypes
{
    [Serializable()]
	public class MESSAGES : DataObject
	{
		public MESSAGES() : base(Database.agrofactuur)
		{
			UpdateParams = new String[] 
			{
            	"MesID"
			};
		
		}

	
		#region ColumnNames
		public class ColumnNamesMESSAGES
		{  
            public const string MesID = "MesID";
            public const string MesProgramID = "MesProgramID";
            public const string MesBegin_DateTime = "MesBegin_DateTime";
            public const string MesEnd_DateTime = "MesEnd_DateTime";
            public const string MesSubject = "MesSubject";
            public const string MesMessage = "MesMessage";
            public const string MesVersion = "MesVersion";
            public const string MesProgId = "MesProgId";
            public const string MesUbnId = "MesUbnId";
            public const string MesThrId = "MesThrId";
            public const string MesFromThrId = "MesFromThrId";
            public const string MesState = "MesState";
            public const string MesReadDate = "MesReadDate";
            public const string MesComment = "MesComment";
            public const string Changed_By = "Changed_By";
            public const string SourceID = "SourceID";

        }
		#endregion




		#region Properties
	
		[System.ComponentModel.DataObjectField(true, true, false)] 
		public int MesID
	    {
			get
	        {
				return base.Getint(ColumnNamesMESSAGES.MesID);
			}
			set
	        {
				base.Setint(ColumnNamesMESSAGES.MesID, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int MesProgramID
	    {
			get
	        {
				return base.Getint(ColumnNamesMESSAGES.MesProgramID);
			}
			set
	        {
				base.Setint(ColumnNamesMESSAGES.MesProgramID, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public DateTime MesBegin_DateTime
	    {
			get
	        {
				return base.GetDateTime(ColumnNamesMESSAGES.MesBegin_DateTime);
			}
			set
	        {
				base.SetDateTime(ColumnNamesMESSAGES.MesBegin_DateTime, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public DateTime MesEnd_DateTime
	    {
			get
	        {
				return base.GetDateTime(ColumnNamesMESSAGES.MesEnd_DateTime);
			}
			set
	        {
				base.SetDateTime(ColumnNamesMESSAGES.MesEnd_DateTime, value);
			}
		}

        [System.ComponentModel.DataObjectField(false, false, false)]
        public string MesSubject
        {
            get
            {
                return base.Getstring(ColumnNamesMESSAGES.MesSubject);
            }
            set
            {
                base.Setstring(ColumnNamesMESSAGES.MesSubject, value);
            }
        }

        [System.ComponentModel.DataObjectField(false, false, false)] 
		public string MesMessage
	    {
			get
	        {
				return base.Getstring(ColumnNamesMESSAGES.MesMessage);
			}
			set
	        {
				base.Setstring(ColumnNamesMESSAGES.MesMessage, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public string MesVersion
	    {
			get
	        {
				return base.Getstring(ColumnNamesMESSAGES.MesVersion);
			}
			set
	        {
				base.Setstring(ColumnNamesMESSAGES.MesVersion, value);
			}
		}

        [System.ComponentModel.DataObjectField(false, false, false)]
        public int MesProgId
        {
            get
            {
                return base.Getint(ColumnNamesMESSAGES.MesProgId);
            }
            set
            {
                base.Setint(ColumnNamesMESSAGES.MesProgId, value);
            }
        }

        [System.ComponentModel.DataObjectField(false, false, false)]
        public int MesUbnId
        {
            get
            {
                return base.Getint(ColumnNamesMESSAGES.MesUbnId);
            }
            set
            {
                base.Setint(ColumnNamesMESSAGES.MesUbnId, value);
            }
        }

        [System.ComponentModel.DataObjectField(false, false, false)]
        public int MesThrId
        {
            get
            {
                return base.Getint(ColumnNamesMESSAGES.MesThrId);
            }
            set
            {
                base.Setint(ColumnNamesMESSAGES.MesThrId, value);
            }
        }

        [System.ComponentModel.DataObjectField(false, false, false)]
        public int MesFromThrId
        {
            get
            {
                return base.Getint(ColumnNamesMESSAGES.MesFromThrId);
            }
            set
            {
                base.Setint(ColumnNamesMESSAGES.MesFromThrId, value);
            }
        }

        [System.ComponentModel.DataObjectField(false, false, false)]
        public int MesState
        {
            get
            {
                return base.Getint(ColumnNamesMESSAGES.MesState);
            }
            set
            {
                base.Setint(ColumnNamesMESSAGES.MesState, value);
            }
        }

        [System.ComponentModel.DataObjectField(false, false, false)]
        public DateTime MesReadDate
        {
            get
            {
                return base.GetDateTime(ColumnNamesMESSAGES.MesReadDate);
            }
            set
            {
                base.SetDateTime(ColumnNamesMESSAGES.MesReadDate, value);
            }
        }

        [System.ComponentModel.DataObjectField(false, false, false)]
        public string MesComment
        {
            get
            {
                return base.Getstring(ColumnNamesMESSAGES.MesComment);
            }
            set
            {
                base.Setstring(ColumnNamesMESSAGES.MesComment, value);
            }
        }

        #endregion

    }
}
