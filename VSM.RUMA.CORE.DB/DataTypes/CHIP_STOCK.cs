
/*
'===============================================================================
'  Generated From - CSharp_VSM_BusinessEntity.vbgen
' 
'  ** IMPORTANT  ** 
'  How to Generate your stored procedures:
' 
'  SQL        = SQL_StoredProcs.vbgen
'  ACCESS     = Access_StoredProcs.vbgen
'  ORACLE     = Oracle_StoredProcs.vbgen
'  FIREBIRD   = FirebirdStoredProcs.vbgen
'  POSTGRESQL = PostgreSQL_StoredProcs.vbgen
'
'  The supporting base class  is in the Architecture directory in "VSM".
'  
'  This object is 'abstract' which means you need to inherit from it to be able
'  to instantiate it.  This is very easilly done. You can override properties and
'  methods in your derived class, this allows you to regenerate this class at any
'  time and not worry about overwriting custom code. 
'
'  NEVER EDIT THIS FILE.
'
'  public class YourObject :  _YourObject
'  {
'
'  }
'
'===============================================================================
*/

// Generated by MyGeneration Version # (1.3.0.3)
using System;
using System.Data;

using System.Collections;
using System.Collections.Specialized;


namespace VSM.RUMA.CORE.DB.DataTypes
{
    [Serializable()]
	public class CHIP_STOCK : DataObject
	{
		public CHIP_STOCK() : base(Database.chip_supplier)
		{
			UpdateParams = new String[] 
			{
            	"Cs_chipnr"
			};
		
		}

	
		#region ColumnNames
		public class ColumnNamesCHIP_STOCK
		{  
            public const string Cs_chipnr = "cs_chipnr";
            public const string Cs_type = "cs_type";
            public const string Cb_box_id = "cb_box_id";
            public const string Cs_supplier_thrid = "cs_supplier_thrid";
            public const string Cs_breeder_thrid = "cs_breeder_thrid";
            public const string Cs_sale_date = "cs_sale_date";
 

		}
		#endregion




		#region Properties
	
		[System.ComponentModel.DataObjectField(true, false, false)] 
		public string cs_chipnr
	    {
			get
	        {
				return base.Getstring(ColumnNamesCHIP_STOCK.Cs_chipnr);
			}
			set
	        {
				base.Setstring(ColumnNamesCHIP_STOCK.Cs_chipnr, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public sbyte cs_type
	    {
			get
	        {
				return base.Getsbyte(ColumnNamesCHIP_STOCK.Cs_type);
			}
			set
	        {
				base.Setsbyte(ColumnNamesCHIP_STOCK.Cs_type, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int cb_box_id
	    {
			get
	        {
				return base.Getint(ColumnNamesCHIP_STOCK.Cb_box_id);
			}
			set
	        {
				base.Setint(ColumnNamesCHIP_STOCK.Cb_box_id, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int cs_supplier_thrid
	    {
			get
	        {
				return base.Getint(ColumnNamesCHIP_STOCK.Cs_supplier_thrid);
			}
			set
	        {
				base.Setint(ColumnNamesCHIP_STOCK.Cs_supplier_thrid, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int cs_breeder_thrid
	    {
			get
	        {
				return base.Getint(ColumnNamesCHIP_STOCK.Cs_breeder_thrid);
			}
			set
	        {
				base.Setint(ColumnNamesCHIP_STOCK.Cs_breeder_thrid, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public DateTime cs_sale_date
	    {
			get
	        {
				return base.GetDateTime(ColumnNamesCHIP_STOCK.Cs_sale_date);
			}
			set
	        {
				base.SetDateTime(ColumnNamesCHIP_STOCK.Cs_sale_date, value);
			}
		}


		#endregion
		
	}
}
