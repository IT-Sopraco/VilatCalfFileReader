
/*
'===============================================================================
'  Generated From - CSharp_VSM_BusinessEntity.vbgen
' 
'  ** IMPORTANT  ** 
'  How to Generate your stored procedures:
' 
'  SQL        = SQL_StoredProcs.vbgen
'  ACCESS     = Access_StoredProcs.vbgen
'  ORACLE     = Oracle_StoredProcs.vbgen
'  FIREBIRD   = FirebirdStoredProcs.vbgen
'  POSTGRESQL = PostgreSQL_StoredProcs.vbgen
'
'  The supporting base class  is in the Architecture directory in "VSM".
'  
'  This object is 'abstract' which means you need to inherit from it to be able
'  to instantiate it.  This is very easilly done. You can override properties and
'  methods in your derived class, this allows you to regenerate this class at any
'  time and not worry about overwriting custom code. 
'
'  NEVER EDIT THIS FILE.
'
'  public class YourObject :  _YourObject
'  {
'
'  }
'
'===============================================================================
*/

// Generated by MyGeneration Version # (1.3.0.3)
using System;
using System.Data;

using System.Collections;
using System.Collections.Specialized;


namespace VSM.RUMA.CORE.DB.DataTypes
{
    [Serializable()]
	public class SUPPLY1_MEDIC : DataObject
	{
		public SUPPLY1_MEDIC() : base(Database.agrofactuur)
		{
			UpdateParams = new String[] 
			{
            	"SupplyId"
			};
		
		}

	
		#region ColumnNames
		public class ColumnNamesSUPPLY1_MEDIC
		{  
            public const string SupplyId = "SupplyId";
            public const string SupMed_DaysWaitingMeat = "SupMed_DaysWaitingMeat";
            public const string SupMed_ChargeNr = "SupMed_ChargeNr";
            public const string SupMed_Toedieningswijze = "SupMed_Toedieningswijze";
            public const string SupMed_Datum_Verlopen = "SupMed_Datum_Verlopen";
            public const string SupMed_Hoeveelheid = "SupMed_Hoeveelheid";
            public const string SupMed_Eenheid = "SupMed_Eenheid";
            public const string SupMed_Hoeveelheid_B = "SupMed_Hoeveelheid_B";
            public const string SupMed_Eenheid_B = "SupMed_Eenheid_B";
            public const string SupMed_NrOfRepeat = "SupMed_NrOfRepeat";
            public const string SupMed_Hoeveelheid_Repeat = "SupMed_Hoeveelheid_Repeat";
            public const string SupMed_Eenheid_Repeat = "SupMed_Eenheid_Repeat";
            public const string SupMed_Dosering = "SupMed_Dosering";
            public const string SupMed_Infokalf = "SupMed_Infokalf";
            public const string SupMed_ProgId = "SupMed_ProgId";
            public const string SupMed_CSVExport = "SupMed_CSVExport";
            public const string SupMed_CSVExport_RUMA = "SupMed_CSVExport_RUMA";
            public const string SupMed_BonNr = "SupMed_BonNr";
            public const string SupMed_AnimalAgeGroup = "SupMed_AnimalAgeGroup";
            public const string SupMed_Cascade = "SupMed_Cascade";
            public const string SupMed_AgeGroup_MinDays = "SupMed_AgeGroup_MinDays";
            public const string SupMed_AgeGroup_MaxDays = "SupMed_AgeGroup_MaxDays";
            public const string SupMed_AnimalSpecies = "SupMed_AnimalSpecies";
            public const string SupMed_BatchNumber = "SupMed_BatchNumber";
 

		}
		#endregion




		#region Properties
	
		[System.ComponentModel.DataObjectField(true, false, false)] 
		public int SupplyId
	    {
			get
	        {
				return base.Getint(ColumnNamesSUPPLY1_MEDIC.SupplyId);
			}
			set
	        {
				base.Setint(ColumnNamesSUPPLY1_MEDIC.SupplyId, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int SupMed_DaysWaitingMeat
	    {
			get
	        {
				return base.Getint(ColumnNamesSUPPLY1_MEDIC.SupMed_DaysWaitingMeat);
			}
			set
	        {
				base.Setint(ColumnNamesSUPPLY1_MEDIC.SupMed_DaysWaitingMeat, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public string SupMed_ChargeNr
	    {
			get
	        {
				return base.Getstring(ColumnNamesSUPPLY1_MEDIC.SupMed_ChargeNr);
			}
			set
	        {
				base.Setstring(ColumnNamesSUPPLY1_MEDIC.SupMed_ChargeNr, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int SupMed_Toedieningswijze
	    {
			get
	        {
				return base.Getint(ColumnNamesSUPPLY1_MEDIC.SupMed_Toedieningswijze);
			}
			set
	        {
				base.Setint(ColumnNamesSUPPLY1_MEDIC.SupMed_Toedieningswijze, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public DateTime SupMed_Datum_Verlopen
	    {
			get
	        {
				return base.GetDateTime(ColumnNamesSUPPLY1_MEDIC.SupMed_Datum_Verlopen);
			}
			set
	        {
				base.SetDateTime(ColumnNamesSUPPLY1_MEDIC.SupMed_Datum_Verlopen, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public double SupMed_Hoeveelheid
	    {
			get
	        {
				return base.Getdouble(ColumnNamesSUPPLY1_MEDIC.SupMed_Hoeveelheid);
			}
			set
	        {
				base.Setdouble(ColumnNamesSUPPLY1_MEDIC.SupMed_Hoeveelheid, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int SupMed_Eenheid
	    {
			get
	        {
				return base.Getint(ColumnNamesSUPPLY1_MEDIC.SupMed_Eenheid);
			}
			set
	        {
				base.Setint(ColumnNamesSUPPLY1_MEDIC.SupMed_Eenheid, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public double SupMed_Hoeveelheid_B
	    {
			get
	        {
				return base.Getdouble(ColumnNamesSUPPLY1_MEDIC.SupMed_Hoeveelheid_B);
			}
			set
	        {
				base.Setdouble(ColumnNamesSUPPLY1_MEDIC.SupMed_Hoeveelheid_B, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int SupMed_Eenheid_B
	    {
			get
	        {
				return base.Getint(ColumnNamesSUPPLY1_MEDIC.SupMed_Eenheid_B);
			}
			set
	        {
				base.Setint(ColumnNamesSUPPLY1_MEDIC.SupMed_Eenheid_B, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int SupMed_NrOfRepeat
	    {
			get
	        {
				return base.Getint(ColumnNamesSUPPLY1_MEDIC.SupMed_NrOfRepeat);
			}
			set
	        {
				base.Setint(ColumnNamesSUPPLY1_MEDIC.SupMed_NrOfRepeat, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public double SupMed_Hoeveelheid_Repeat
	    {
			get
	        {
				return base.Getdouble(ColumnNamesSUPPLY1_MEDIC.SupMed_Hoeveelheid_Repeat);
			}
			set
	        {
				base.Setdouble(ColumnNamesSUPPLY1_MEDIC.SupMed_Hoeveelheid_Repeat, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int SupMed_Eenheid_Repeat
	    {
			get
	        {
				return base.Getint(ColumnNamesSUPPLY1_MEDIC.SupMed_Eenheid_Repeat);
			}
			set
	        {
				base.Setint(ColumnNamesSUPPLY1_MEDIC.SupMed_Eenheid_Repeat, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public string SupMed_Dosering
	    {
			get
	        {
				return base.Getstring(ColumnNamesSUPPLY1_MEDIC.SupMed_Dosering);
			}
			set
	        {
				base.Setstring(ColumnNamesSUPPLY1_MEDIC.SupMed_Dosering, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public sbyte SupMed_Infokalf
	    {
			get
	        {
				return base.Getsbyte(ColumnNamesSUPPLY1_MEDIC.SupMed_Infokalf);
			}
			set
	        {
				base.Setsbyte(ColumnNamesSUPPLY1_MEDIC.SupMed_Infokalf, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int SupMed_ProgId
	    {
			get
	        {
				return base.Getint(ColumnNamesSUPPLY1_MEDIC.SupMed_ProgId);
			}
			set
	        {
				base.Setint(ColumnNamesSUPPLY1_MEDIC.SupMed_ProgId, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public sbyte SupMed_CSVExport
	    {
			get
	        {
				return base.Getsbyte(ColumnNamesSUPPLY1_MEDIC.SupMed_CSVExport);
			}
			set
	        {
				base.Setsbyte(ColumnNamesSUPPLY1_MEDIC.SupMed_CSVExport, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public sbyte SupMed_CSVExport_RUMA
	    {
			get
	        {
				return base.Getsbyte(ColumnNamesSUPPLY1_MEDIC.SupMed_CSVExport_RUMA);
			}
			set
	        {
				base.Setsbyte(ColumnNamesSUPPLY1_MEDIC.SupMed_CSVExport_RUMA, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public string SupMed_BonNr
	    {
			get
	        {
				return base.Getstring(ColumnNamesSUPPLY1_MEDIC.SupMed_BonNr);
			}
			set
	        {
				base.Setstring(ColumnNamesSUPPLY1_MEDIC.SupMed_BonNr, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public string SupMed_AnimalAgeGroup
	    {
			get
	        {
				return base.Getstring(ColumnNamesSUPPLY1_MEDIC.SupMed_AnimalAgeGroup);
			}
			set
	        {
				base.Setstring(ColumnNamesSUPPLY1_MEDIC.SupMed_AnimalAgeGroup, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public sbyte SupMed_Cascade
	    {
			get
	        {
				return base.Getsbyte(ColumnNamesSUPPLY1_MEDIC.SupMed_Cascade);
			}
			set
	        {
				base.Setsbyte(ColumnNamesSUPPLY1_MEDIC.SupMed_Cascade, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int SupMed_AgeGroup_MinDays
	    {
			get
	        {
				return base.Getint(ColumnNamesSUPPLY1_MEDIC.SupMed_AgeGroup_MinDays);
			}
			set
	        {
				base.Setint(ColumnNamesSUPPLY1_MEDIC.SupMed_AgeGroup_MinDays, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public int SupMed_AgeGroup_MaxDays
	    {
			get
	        {
				return base.Getint(ColumnNamesSUPPLY1_MEDIC.SupMed_AgeGroup_MaxDays);
			}
			set
	        {
				base.Setint(ColumnNamesSUPPLY1_MEDIC.SupMed_AgeGroup_MaxDays, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public string SupMed_AnimalSpecies
	    {
			get
	        {
				return base.Getstring(ColumnNamesSUPPLY1_MEDIC.SupMed_AnimalSpecies);
			}
			set
	        {
				base.Setstring(ColumnNamesSUPPLY1_MEDIC.SupMed_AnimalSpecies, value);
			}
		}

		[System.ComponentModel.DataObjectField(false, false, false)] 
		public string SupMed_BatchNumber
	    {
			get
	        {
				return base.Getstring(ColumnNamesSUPPLY1_MEDIC.SupMed_BatchNumber);
			}
			set
	        {
				base.Setstring(ColumnNamesSUPPLY1_MEDIC.SupMed_BatchNumber, value);
			}
		}


		#endregion
		
	}
}
